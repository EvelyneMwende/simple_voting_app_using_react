{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spectre\\\\OneDrive\\\\Desktop\\\\APP4035\\\\voting-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport presidentsJson from \"./data/president.json\";\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport VoterView from \"./component/VoterView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [presidents, setCandidates] = useState([]);\n  useEffect(() => {\n    setCandidates(presidentsJson);\n  }, []);\n\n  function incrementVoteCount(presidentId) {\n    presidents = presidents.map(president => {\n      if (president._id === presidentId) {\n        president.votes = president.votes + 1;\n      }\n\n      return president;\n    });\n    setCandidates(presidents);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: presidents.map(president => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(VoterView, {\n            candidate: president,\n            incrementVoteCount: presidentId => incrementVoteCount(presidentId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"JyI2o0hP3Rw76dm8JG21+/gxc9I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/spectre/OneDrive/Desktop/APP4035/voting-app/src/App.js"],"names":["React","useEffect","useState","Container","Row","Col","presidentsJson","VoterView","App","presidents","setCandidates","incrementVoteCount","presidentId","map","president","_id","votes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAO,WAAP;AACA,OAAO,kCAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,aAAa,CAACJ,cAAD,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASK,kBAAT,CAA4BC,WAA5B,EAAyC;AACvCH,IAAAA,UAAU,GAAGA,UAAU,CAACI,GAAX,CAAgBC,SAAD,IAAe;AACzC,UAAIA,SAAS,CAACC,GAAV,KAAkBH,WAAtB,EAAmC;AACjCE,QAAAA,SAAS,CAACE,KAAV,GAAkBF,SAAS,CAACE,KAAV,GAAkB,CAApC;AACD;;AACD,aAAOF,SAAP;AACD,KALY,CAAb;AAMAJ,IAAAA,aAAa,CAACD,UAAD,CAAb;AACD;;AAED,sBAEI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA,2BACE,QAAC,GAAD;AAAA,gBACGA,UAAU,CAACI,GAAX,CAAgBC,SAAD,IAAe;AAC7B,4BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,SAAD;AACI,YAAA,SAAS,EAAEA,SADf;AAEI,YAAA,kBAAkB,EAAGF,WAAD,IAAiBD,kBAAkB,CAACC,WAAD;AAF3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBD;;GAlCQJ,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport presidentsJson from \"./data/president.json\";\r\nimport './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport VoterView from \"./component/VoterView\";\r\n\r\nfunction App() {\r\n  let [presidents, setCandidates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCandidates(presidentsJson);\r\n  }, []);\r\n\r\n  function incrementVoteCount(presidentId) {\r\n    presidents = presidents.map((president) => {\r\n      if (president._id === presidentId) {\r\n        president.votes = president.votes + 1;\r\n      }\r\n      return president;\r\n    });\r\n    setCandidates(presidents);\r\n  }\r\n\r\n  return (\r\n      \r\n      <Container className=\"app\">\r\n        <Row>\r\n          {presidents.map((president) => {\r\n            return (\r\n                <Col md={4}>\r\n                  <VoterView\r\n                      candidate={president}\r\n                      incrementVoteCount={(presidentId) => incrementVoteCount(presidentId)}\r\n                  />\r\n                </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n  );\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}